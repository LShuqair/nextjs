{"ast":null,"code":"import { usersRepo } from 'helpers';\nexport default handler;\n\nfunction handler(req, res) {\n  switch (req.method) {\n    case 'GET':\n      return getUsers();\n\n    case 'POST':\n      return createUser();\n\n    default:\n      return res.status(405).end(`Method ${req.method} Not Allowed`);\n  }\n\n  function getUsers() {\n    const users = usersRepo.getAll();\n    return res.status(200).json(users);\n  }\n\n  function createUser() {\n    try {\n      usersRepo.create(req.body);\n      return res.status(200).json({});\n    } catch (error) {\n      return res.status(400).json({\n        message: error\n      });\n    }\n  }\n}","map":{"version":3,"sources":["/Users/lunashuqair/Desktop/nextjs/pages/api/users/index.js"],"names":["usersRepo","handler","req","res","method","getUsers","createUser","status","end","users","getAll","json","create","body","error","message"],"mappings":"AAAA,SAASA,SAAT,QAA0B,SAA1B;AAEA,eAAeC,OAAf;;AAEA,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AACvB,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,KAAL;AACI,aAAOC,QAAQ,EAAf;;AACJ,SAAK,MAAL;AACI,aAAOC,UAAU,EAAjB;;AACJ;AACI,aAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAqB,UAASN,GAAG,CAACE,MAAO,cAAzC,CAAP;AANR;;AASA,WAASC,QAAT,GAAoB;AAChB,UAAMI,KAAK,GAAGT,SAAS,CAACU,MAAV,EAAd;AACA,WAAOP,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqBF,KAArB,CAAP;AACH;;AAED,WAASH,UAAT,GAAsB;AAClB,QAAI;AACAN,MAAAA,SAAS,CAACY,MAAV,CAAiBV,GAAG,CAACW,IAArB;AACA,aAAOV,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB,EAArB,CAAP;AACH,KAHD,CAGE,OAAOG,KAAP,EAAc;AACZ,aAAOX,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAAEI,QAAAA,OAAO,EAAED;AAAX,OAArB,CAAP;AACH;AACJ;AACJ","sourcesContent":["import { usersRepo } from 'helpers';\n\nexport default handler;\n\nfunction handler(req, res) {\n    switch (req.method) {\n        case 'GET':\n            return getUsers();\n        case 'POST':\n            return createUser();\n        default:\n            return res.status(405).end(`Method ${req.method} Not Allowed`)\n    }\n\n    function getUsers() {\n        const users = usersRepo.getAll();\n        return res.status(200).json(users);\n    }\n    \n    function createUser() {\n        try {\n            usersRepo.create(req.body);\n            return res.status(200).json({});\n        } catch (error) {\n            return res.status(400).json({ message: error });\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}