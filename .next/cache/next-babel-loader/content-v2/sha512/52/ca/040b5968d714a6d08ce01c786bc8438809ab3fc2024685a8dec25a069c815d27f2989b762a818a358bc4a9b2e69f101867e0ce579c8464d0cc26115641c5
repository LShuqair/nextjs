{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lunashuqair/Desktop/nextjs/components/NavLink.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { Link } from '.';\nexport { NavLink };\nNavLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  exact: PropTypes.bool\n};\nNavLink.defaultProps = {\n  exact: false\n};\n\nfunction NavLink(_ref) {\n  let {\n    children,\n    href,\n    exact\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"href\", \"exact\"]);\n\n  const {\n    pathname\n  } = useRouter();\n  const isActive = exact ? pathname === href : pathname.startsWith(href);\n\n  if (isActive) {\n    props.className += ' active';\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({\n    href: href\n  }, props), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}","map":{"version":3,"sources":["/Users/lunashuqair/Desktop/nextjs/components/NavLink.jsx"],"names":["useRouter","PropTypes","Link","NavLink","propTypes","href","string","isRequired","exact","bool","defaultProps","children","props","pathname","isActive","startsWith","className"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,IAAT,QAAqB,GAArB;AAEA,SAASC,OAAT;AAEAA,OAAO,CAACC,SAAR,GAAoB;AAChBC,EAAAA,IAAI,EAAEJ,SAAS,CAACK,MAAV,CAAiBC,UADP;AAEhBC,EAAAA,KAAK,EAAEP,SAAS,CAACQ;AAFD,CAApB;AAKAN,OAAO,CAACO,YAAR,GAAuB;AACnBF,EAAAA,KAAK,EAAE;AADY,CAAvB;;AAIA,SAASL,OAAT,OAAsD;AAAA,MAArC;AAAEQ,IAAAA,QAAF;AAAYN,IAAAA,IAAZ;AAAkBG,IAAAA;AAAlB,GAAqC;AAAA,MAATI,KAAS;;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAeb,SAAS,EAA9B;AACA,QAAMc,QAAQ,GAAGN,KAAK,GAAGK,QAAQ,KAAKR,IAAhB,GAAuBQ,QAAQ,CAACE,UAAT,CAAoBV,IAApB,CAA7C;;AAEA,MAAIS,QAAJ,EAAc;AACVF,IAAAA,KAAK,CAACI,SAAN,IAAmB,SAAnB;AACH;;AAED,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEX;AAAZ,KAAsBO,KAAtB;AAAA,cAA8BD;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH","sourcesContent":["import { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\n\nimport { Link } from '.';\n\nexport { NavLink };\n\nNavLink.propTypes = {\n    href: PropTypes.string.isRequired,\n    exact: PropTypes.bool\n};\n\nNavLink.defaultProps = {\n    exact: false\n};\n\nfunction NavLink({ children, href, exact, ...props }) {\n    const { pathname } = useRouter();\n    const isActive = exact ? pathname === href : pathname.startsWith(href);\n    \n    if (isActive) {\n        props.className += ' active';\n    }\n\n    return <Link href={href} {...props}>{children}</Link>;\n}"]},"metadata":{},"sourceType":"module"}