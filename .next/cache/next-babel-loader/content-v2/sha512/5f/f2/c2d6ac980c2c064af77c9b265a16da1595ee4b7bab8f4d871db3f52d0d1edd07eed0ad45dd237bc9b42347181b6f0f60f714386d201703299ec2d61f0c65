{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nexport const alertService = {\n  onAlert,\n  success,\n  error,\n  info,\n  warn,\n  alert,\n  clear\n};\nexport const AlertType = {\n  Success: 'Success',\n  Error: 'Error',\n  Info: 'Info',\n  Warning: 'Warning'\n};\nconst alertSubject = new Subject();\nconst defaultId = 'default-alert'; // enable subscribing to alerts observable\n\nfunction onAlert(id = defaultId) {\n  return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\n} // convenience methods\n\n\nfunction success(message, options) {\n  alert(_objectSpread(_objectSpread({}, options), {}, {\n    type: AlertType.Success,\n    message\n  }));\n}\n\nfunction error(message, options) {\n  alert(_objectSpread(_objectSpread({}, options), {}, {\n    type: AlertType.Error,\n    message\n  }));\n}\n\nfunction info(message, options) {\n  alert(_objectSpread(_objectSpread({}, options), {}, {\n    type: AlertType.Info,\n    message\n  }));\n}\n\nfunction warn(message, options) {\n  alert(_objectSpread(_objectSpread({}, options), {}, {\n    type: AlertType.Warning,\n    message\n  }));\n} // core alert method\n\n\nfunction alert(alert) {\n  alert.id = alert.id || defaultId;\n  alert.autoClose = alert.autoClose === undefined ? true : alert.autoClose;\n  alertSubject.next(alert);\n} // clear alerts\n\n\nfunction clear(id = defaultId) {\n  alertSubject.next({\n    id\n  });\n}","map":{"version":3,"sources":["/Users/lunashuqair/Desktop/nextjs/services/alert.service.js"],"names":["Subject","filter","alertService","onAlert","success","error","info","warn","alert","clear","AlertType","Success","Error","Info","Warning","alertSubject","defaultId","id","asObservable","pipe","x","message","options","type","autoClose","undefined","next"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,OADwB;AAExBC,EAAAA,OAFwB;AAGxBC,EAAAA,KAHwB;AAIxBC,EAAAA,IAJwB;AAKxBC,EAAAA,IALwB;AAMxBC,EAAAA,KANwB;AAOxBC,EAAAA;AAPwB,CAArB;AAUP,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,OAAO,EAAE,SADY;AAErBC,EAAAA,KAAK,EAAE,OAFc;AAGrBC,EAAAA,IAAI,EAAE,MAHe;AAIrBC,EAAAA,OAAO,EAAE;AAJY,CAAlB;AAOP,MAAMC,YAAY,GAAG,IAAIf,OAAJ,EAArB;AACA,MAAMgB,SAAS,GAAG,eAAlB,C,CAEA;;AACA,SAASb,OAAT,CAAiBc,EAAE,GAAGD,SAAtB,EAAiC;AAC7B,SAAOD,YAAY,CAACG,YAAb,GAA4BC,IAA5B,CAAiClB,MAAM,CAACmB,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAApB,CAAvC,CAAP;AACH,C,CAED;;;AACA,SAASb,OAAT,CAAiBiB,OAAjB,EAA0BC,OAA1B,EAAmC;AAC/Bd,EAAAA,KAAK,iCAAMc,OAAN;AAAeC,IAAAA,IAAI,EAAEb,SAAS,CAACC,OAA/B;AAAwCU,IAAAA;AAAxC,KAAL;AACH;;AAED,SAAShB,KAAT,CAAegB,OAAf,EAAwBC,OAAxB,EAAiC;AAC7Bd,EAAAA,KAAK,iCAAMc,OAAN;AAAeC,IAAAA,IAAI,EAAEb,SAAS,CAACE,KAA/B;AAAsCS,IAAAA;AAAtC,KAAL;AACH;;AAED,SAASf,IAAT,CAAce,OAAd,EAAuBC,OAAvB,EAAgC;AAC5Bd,EAAAA,KAAK,iCAAMc,OAAN;AAAeC,IAAAA,IAAI,EAAEb,SAAS,CAACG,IAA/B;AAAqCQ,IAAAA;AAArC,KAAL;AACH;;AAED,SAASd,IAAT,CAAcc,OAAd,EAAuBC,OAAvB,EAAgC;AAC5Bd,EAAAA,KAAK,iCAAMc,OAAN;AAAeC,IAAAA,IAAI,EAAEb,SAAS,CAACI,OAA/B;AAAwCO,IAAAA;AAAxC,KAAL;AACH,C,CAED;;;AACA,SAASb,KAAT,CAAeA,KAAf,EAAsB;AAClBA,EAAAA,KAAK,CAACS,EAAN,GAAWT,KAAK,CAACS,EAAN,IAAYD,SAAvB;AACAR,EAAAA,KAAK,CAACgB,SAAN,GAAmBhB,KAAK,CAACgB,SAAN,KAAoBC,SAApB,GAAgC,IAAhC,GAAuCjB,KAAK,CAACgB,SAAhE;AACAT,EAAAA,YAAY,CAACW,IAAb,CAAkBlB,KAAlB;AACH,C,CAED;;;AACA,SAASC,KAAT,CAAeQ,EAAE,GAAGD,SAApB,EAA+B;AAC3BD,EAAAA,YAAY,CAACW,IAAb,CAAkB;AAAET,IAAAA;AAAF,GAAlB;AACH","sourcesContent":["import { Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport const alertService = {\n    onAlert,\n    success,\n    error,\n    info,\n    warn,\n    alert,\n    clear\n};\n\nexport const AlertType = {\n    Success: 'Success',\n    Error: 'Error',\n    Info: 'Info',\n    Warning: 'Warning'\n};\n\nconst alertSubject = new Subject();\nconst defaultId = 'default-alert';\n\n// enable subscribing to alerts observable\nfunction onAlert(id = defaultId) {\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\n}\n\n// convenience methods\nfunction success(message, options) {\n    alert({ ...options, type: AlertType.Success, message });\n}\n\nfunction error(message, options) {\n    alert({ ...options, type: AlertType.Error, message });\n}\n\nfunction info(message, options) {\n    alert({ ...options, type: AlertType.Info, message });\n}\n\nfunction warn(message, options) {\n    alert({ ...options, type: AlertType.Warning, message });\n}\n\n// core alert method\nfunction alert(alert) {\n    alert.id = alert.id || defaultId;\n    alert.autoClose = (alert.autoClose === undefined ? true : alert.autoClose);\n    alertSubject.next(alert);\n}\n\n// clear alerts\nfunction clear(id = defaultId) {\n    alertSubject.next({ id });\n}"]},"metadata":{},"sourceType":"module"}