{"ast":null,"code":"export const fetchWrapper = {\n  get,\n  post,\n  put,\n  delete: _delete\n};\n\nfunction get(url) {\n  const requestOptions = {\n    method: 'GET'\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\nfunction post(url, body) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\nfunction put(url, body) {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n} // prefixed with underscored because delete is a reserved word in javascript\n\n\nfunction _delete(url) {\n  const requestOptions = {\n    method: 'DELETE'\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n} // helper functions\n\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["/Users/lunashuqair/Desktop/nextjs/helpers/fetch-wrapper.js"],"names":["fetchWrapper","get","post","put","delete","_delete","url","requestOptions","method","fetch","then","handleResponse","body","headers","JSON","stringify","response","text","data","parse","ok","error","message","statusText","Promise","reject"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,GADwB;AAExBC,EAAAA,IAFwB;AAGxBC,EAAAA,GAHwB;AAIxBC,EAAAA,MAAM,EAAEC;AAJgB,CAArB;;AAOP,SAASJ,GAAT,CAAaK,GAAb,EAAkB;AACd,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE;AADW,GAAvB;AAGA,SAAOC,KAAK,CAACH,GAAD,EAAMC,cAAN,CAAL,CAA2BG,IAA3B,CAAgCC,cAAhC,CAAP;AACH;;AAED,SAAST,IAAT,CAAcI,GAAd,EAAmBM,IAAnB,EAAyB;AACrB,QAAML,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBK,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBD,IAAAA,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHa,GAAvB;AAKA,SAAOH,KAAK,CAACH,GAAD,EAAMC,cAAN,CAAL,CAA2BG,IAA3B,CAAgCC,cAAhC,CAAP;AACH;;AAED,SAASR,GAAT,CAAaG,GAAb,EAAkBM,IAAlB,EAAwB;AACpB,QAAML,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBK,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBD,IAAAA,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHa,GAAvB;AAKA,SAAOH,KAAK,CAACH,GAAD,EAAMC,cAAN,CAAL,CAA2BG,IAA3B,CAAgCC,cAAhC,CAAP;AACH,C,CAED;;;AACA,SAASN,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE;AADW,GAAvB;AAGA,SAAOC,KAAK,CAACH,GAAD,EAAMC,cAAN,CAAL,CAA2BG,IAA3B,CAAgCC,cAAhC,CAAP;AACH,C,CAED;;;AAEA,SAASA,cAAT,CAAwBK,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,GAAgBP,IAAhB,CAAqBO,IAAI,IAAI;AAChC,UAAMC,IAAI,GAAGD,IAAI,IAAIH,IAAI,CAACK,KAAL,CAAWF,IAAX,CAArB;;AAEA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AACd,YAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BN,QAAQ,CAACO,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAED,WAAOH,IAAP;AACH,GATM,CAAP;AAUH","sourcesContent":["export const fetchWrapper = {\n    get,\n    post,\n    put,\n    delete: _delete\n};\n\nfunction get(url) {\n    const requestOptions = {\n        method: 'GET'\n    };\n    return fetch(url, requestOptions).then(handleResponse);\n}\n\nfunction post(url, body) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n    };\n    return fetch(url, requestOptions).then(handleResponse);\n}\n\nfunction put(url, body) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n    };\n    return fetch(url, requestOptions).then(handleResponse);\n}\n\n// prefixed with underscored because delete is a reserved word in javascript\nfunction _delete(url) {\n    const requestOptions = {\n        method: 'DELETE'\n    };\n    return fetch(url, requestOptions).then(handleResponse);\n}\n\n// helper functions\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n\n        if (!response.ok) {\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}"]},"metadata":{},"sourceType":"module"}